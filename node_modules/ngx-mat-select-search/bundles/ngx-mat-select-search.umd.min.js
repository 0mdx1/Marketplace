!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/forms"),require("@angular/material/core"),require("@angular/material/select"),require("@angular/material/form-field"),require("@angular/cdk/keycodes"),require("@angular/cdk/scrolling"),require("@angular/cdk/a11y"),require("rxjs"),require("rxjs/operators"),require("@angular/material/button"),require("@angular/material/checkbox"),require("@angular/material/icon"),require("@angular/material/progress-spinner"),require("@angular/material/tooltip"),require("@angular/common")):"function"==typeof define&&define.amd?define("ngx-mat-select-search",["exports","@angular/core","@angular/forms","@angular/material/core","@angular/material/select","@angular/material/form-field","@angular/cdk/keycodes","@angular/cdk/scrolling","@angular/cdk/a11y","rxjs","rxjs/operators","@angular/material/button","@angular/material/checkbox","@angular/material/icon","@angular/material/progress-spinner","@angular/material/tooltip","@angular/common"],t):t((e=e||self)["ngx-mat-select-search"]={},e.ng.core,e.ng.forms,e.ng.material.core,e.ng.material.select,e.ng.material["form-field"],e.ng.cdk.keycodes,e.ng.cdk.scrolling,e.ng.cdk.a11y,e.rxjs,e.rxjs.operators,e.ng.material.button,e.ng.material.checkbox,e.ng.material.icon,e.ng.material["progress-spinner"],e.ng.material.tooltip,e.ng.common)}(this,(function(e,t,n,o,i,a,r,l,s,c,p,h,u,d,m,g,f){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */function y(e,t,n,o){var i,a=arguments.length,r=a<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,n,o);else for(var l=e.length-1;l>=0;l--)(i=e[l])&&(r=(a<3?i(r):a>3?i(t,n,r):i(t,n))||r);return a>3&&r&&Object.defineProperty(t,n,r),r}function b(e,t){return function(n,o){t(n,o,e)}}function S(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var o,i,a=n.call(e),r=[];try{for(;(void 0===t||t-- >0)&&!(o=a.next()).done;)r.push(o.value)}catch(e){i={error:e}}finally{try{o&&!o.done&&(n=a.return)&&n.call(a)}finally{if(i)throw i.error}}return r}var v=function(){function e(){}return e=y([t.Directive({selector:"[ngxMatSelectSearchClear]"})],e)}(),x=function(){function e(e,o,i,a,r,l){var s=this;void 0===a&&(a=null),void 0===l&&(l=null),this.matSelect=e,this.changeDetectorRef=o,this._viewportRuler=i,this.matOption=a,this.liveAnnouncer=r,this.matFormField=l,this.placeholderLabel="Suche",this.type="text",this.noEntriesFoundLabel="Keine Optionen gefunden",this.indexAndLengthScreenReaderText=" of ",this.clearSearchInput=!0,this.searching=!1,this.disableInitialFocus=!1,this.enableClearOnEscapePressed=!1,this.preventHomeEndKeyPropagation=!1,this.disableScrollToActiveOnOptionsChanged=!1,this.ariaLabel="dropdown search",this.showToggleAllCheckbox=!1,this.toggleAllCheckboxChecked=!1,this.toggleAllCheckboxIndeterminate=!1,this.toggleAllCheckboxTooltipMessage="",this.toogleAllCheckboxTooltipPosition="below",this.hideClearSearchButton=!1,this.alwaysRestoreSelectedOptionsMulti=!1,this.toggleAll=new t.EventEmitter,this.onTouched=function(e){},this._options$=new c.BehaviorSubject(null),this.optionsList$=this._options$.pipe(p.switchMap((function(e){return e?e.changes.pipe(p.map((function(e){return e.toArray()})),p.startWith(e.toArray())):c.of(null)}))),this.optionsLength$=this.optionsList$.pipe(p.map((function(e){return e?e.length:0}))),this._formControl=new n.FormControl(""),this._showNoEntriesFound$=c.combineLatest([this._formControl.valueChanges,this.optionsLength$]).pipe(p.map((function(e){var t=S(e,2),n=t[0],o=t[1];return s.noEntriesFoundLabel&&n&&o===s.getOptionsLengthOffset()}))),this._onDestroy=new c.Subject}var h;return h=e,Object.defineProperty(e.prototype,"isInsideMatOption",{get:function(){return!!this.matOption},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"value",{get:function(){return this._formControl.value},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"_options",{get:function(){return this._options$.getValue()},set:function(e){this._options$.next(e)},enumerable:!0,configurable:!0}),e.prototype.ngOnInit=function(){var e=this,t="mat-select-search-panel";this.matSelect.panelClass?Array.isArray(this.matSelect.panelClass)?this.matSelect.panelClass.push(t):"string"==typeof this.matSelect.panelClass?this.matSelect.panelClass=[this.matSelect.panelClass,t]:"object"==typeof this.matSelect.panelClass&&(this.matSelect.panelClass[t]=!0):this.matSelect.panelClass=t,this.matOption?(this.matOption.disabled=!0,this.matOption._getHostElement().classList.add("contains-mat-select-search")):console.error("<ngx-mat-select-search> must be placed inside a <mat-option> element"),this.matSelect.openedChange.pipe(p.delay(1),p.takeUntil(this._onDestroy)).subscribe((function(t){t?(e.updateInputWidth(),e.disableInitialFocus||e._focus()):e.clearSearchInput&&e._reset()})),this.matSelect.openedChange.pipe(p.take(1)).pipe(p.takeUntil(this._onDestroy)).subscribe((function(){e.matSelect._keyManager?e.matSelect._keyManager.change.pipe(p.takeUntil(e._onDestroy)).subscribe((function(){return e.adjustScrollTopToFitActiveOptionIntoView()})):console.log("_keyManager was not initialized."),e._options=e.matSelect.options;var t=e._options.toArray()[e.getOptionsLengthOffset()];e._options.changes.pipe(p.takeUntil(e._onDestroy)).subscribe((function(){setTimeout((function(){var n=e._options.toArray(),o=n[e.getOptionsLengthOffset()],i=e.matSelect._keyManager;i&&e.matSelect.panelOpen&&(!!e.matSelect.compareWith(t,o)&&i.activeItem&&n.find((function(t){return e.matSelect.compareWith(t,i.activeItem)}))||i.setFirstItemActive(),setTimeout((function(){e.updateInputWidth()})),e.disableScrollToActiveOnOptionsChanged||e.adjustScrollTopToFitActiveOptionIntoView());t=o}))}))})),this._showNoEntriesFound$.pipe(p.takeUntil(this._onDestroy)).subscribe((function(t){e.matOption&&(t?e.matOption._getHostElement().classList.add("mat-select-search-no-entries-found"):e.matOption._getHostElement().classList.remove("mat-select-search-no-entries-found"))})),this._viewportRuler.change().pipe(p.takeUntil(this._onDestroy)).subscribe((function(){e.matSelect.panelOpen&&e.updateInputWidth()})),this.initMultipleHandling(),this.optionsList$.pipe(p.takeUntil(this._onDestroy)).subscribe((function(){e.changeDetectorRef.markForCheck()}))},e.prototype._emitSelectAllBooleanToParent=function(e){this.toggleAll.emit(e)},e.prototype.ngOnDestroy=function(){this._onDestroy.next(),this._onDestroy.complete()},e.prototype._isToggleAllCheckboxVisible=function(){return this.matSelect.multiple&&this.showToggleAllCheckbox},e.prototype._handleKeydown=function(e){var t=this;(e.key&&1===e.key.length||e.keyCode>=r.A&&e.keyCode<=r.Z||e.keyCode>=r.ZERO&&e.keyCode<=r.NINE||e.keyCode===r.SPACE||this.preventHomeEndKeyPropagation&&(e.keyCode===r.HOME||e.keyCode===r.END))&&e.stopPropagation(),this.matSelect.multiple&&e.key&&e.keyCode===r.ENTER&&setTimeout((function(){return t._focus()})),!0===this.enableClearOnEscapePressed&&e.keyCode===r.ESCAPE&&this.value&&(this._reset(!0),e.stopPropagation())},e.prototype._handleKeyup=function(e){if(e.keyCode===r.UP_ARROW||e.keyCode===r.DOWN_ARROW){var t=this.matSelect._getAriaActiveDescendant(),n=this._options.toArray().findIndex((function(e){return e.id===t}));if(-1!==n){var o=this._options.toArray()[n];this.liveAnnouncer.announce(o.viewValue+" "+this.getAriaIndex(n)+this.indexAndLengthScreenReaderText+this.getAriaLength())}}},e.prototype.getAriaIndex=function(e){return 0===this.getOptionsLengthOffset()?e+1:e},e.prototype.getAriaLength=function(){return this._options.toArray().length-this.getOptionsLengthOffset()},e.prototype.writeValue=function(e){this._lastExternalInputValue=e,this._formControl.setValue(e),this.changeDetectorRef.markForCheck()},e.prototype.onBlur=function(){this.onTouched()},e.prototype.registerOnChange=function(e){var t=this;this._formControl.valueChanges.pipe(p.filter((function(e){return e!==t._lastExternalInputValue})),p.tap((function(){return t._lastExternalInputValue=void 0})),p.takeUntil(this._onDestroy)).subscribe(e)},e.prototype.registerOnTouched=function(e){this.onTouched=e},e.prototype._focus=function(){if(this.searchSelectInput&&this.matSelect.panel){var e=this.matSelect.panel.nativeElement,t=e.scrollTop;this.searchSelectInput.nativeElement.focus(),e.scrollTop=t}},e.prototype._reset=function(e){this._formControl.setValue(""),e&&this._focus()},e.prototype.initMultipleHandling=function(){var e=this;this.matSelect.ngControl?(this.previousSelectedValues=this.matSelect.ngControl.value,this.matSelect.ngControl.valueChanges.pipe(p.takeUntil(this._onDestroy)).subscribe((function(t){var n=!1;if(e.matSelect.multiple&&(e.alwaysRestoreSelectedOptionsMulti||e._formControl.value&&e._formControl.value.length)&&e.previousSelectedValues&&Array.isArray(e.previousSelectedValues)){t&&Array.isArray(t)||(t=[]);var o=e.matSelect.options.map((function(e){return e.value}));e.previousSelectedValues.forEach((function(i){t.some((function(t){return e.matSelect.compareWith(t,i)}))||o.some((function(t){return e.matSelect.compareWith(t,i)}))||(t.push(i),n=!0)}))}e.previousSelectedValues=t,n&&e.matSelect._onChange(t)}))):this.matSelect.multiple&&console.error("the mat-select containing ngx-mat-select-search must have a ngModel or formControl directive when multiple=true")},e.prototype.adjustScrollTopToFitActiveOptionIntoView=function(){if(this.matSelect.panel&&this.matSelect.options.length>0){var e=this.getMatOptionHeight(),t=this.matSelect._keyManager.activeItemIndex||0,n=o._countGroupLabelsBeforeOption(t,this.matSelect.options,this.matSelect.optionGroups),i=(this.matOption?-1:0)+n+t,a=this.matSelect.panel.nativeElement.scrollTop,r=this.innerSelectSearch.nativeElement.offsetHeight,l=Math.floor((256-r)/e),s=Math.round((a+r)/e)-1;s>=i?this.matSelect.panel.nativeElement.scrollTop=i*e:s+l<=i&&(this.matSelect.panel.nativeElement.scrollTop=(i+1)*e-(256-r))}},e.prototype.updateInputWidth=function(){if(this.innerSelectSearch&&this.innerSelectSearch.nativeElement){for(var e,t=this.innerSelectSearch.nativeElement;t=t.parentElement;)if(t.classList.contains("mat-select-panel")){e=t;break}e&&(this.innerSelectSearch.nativeElement.style.width=e.clientWidth+"px")}},e.prototype.getMatOptionHeight=function(){return this.matSelect.options.length>0?this.matSelect.options.first._getHostElement().getBoundingClientRect().height:0},e.prototype.getOptionsLengthOffset=function(){return this.matOption?1:0},e.ctorParameters=function(){return[{type:i.MatSelect,decorators:[{type:t.Inject,args:[i.MatSelect]}]},{type:t.ChangeDetectorRef},{type:l.ViewportRuler},{type:o.MatOption,decorators:[{type:t.Optional},{type:t.Inject,args:[o.MatOption]}]},{type:s.LiveAnnouncer},{type:a.MatFormField,decorators:[{type:t.Optional},{type:t.Inject,args:[a.MatFormField]}]}]},y([t.Input()],e.prototype,"placeholderLabel",void 0),y([t.Input()],e.prototype,"type",void 0),y([t.Input()],e.prototype,"noEntriesFoundLabel",void 0),y([t.Input()],e.prototype,"indexAndLengthScreenReaderText",void 0),y([t.Input()],e.prototype,"clearSearchInput",void 0),y([t.Input()],e.prototype,"searching",void 0),y([t.Input()],e.prototype,"disableInitialFocus",void 0),y([t.Input()],e.prototype,"enableClearOnEscapePressed",void 0),y([t.Input()],e.prototype,"preventHomeEndKeyPropagation",void 0),y([t.Input()],e.prototype,"disableScrollToActiveOnOptionsChanged",void 0),y([t.Input()],e.prototype,"ariaLabel",void 0),y([t.Input()],e.prototype,"showToggleAllCheckbox",void 0),y([t.Input()],e.prototype,"toggleAllCheckboxChecked",void 0),y([t.Input()],e.prototype,"toggleAllCheckboxIndeterminate",void 0),y([t.Input()],e.prototype,"toggleAllCheckboxTooltipMessage",void 0),y([t.Input()],e.prototype,"toogleAllCheckboxTooltipPosition",void 0),y([t.Input()],e.prototype,"hideClearSearchButton",void 0),y([t.Input()],e.prototype,"alwaysRestoreSelectedOptionsMulti",void 0),y([t.Output()],e.prototype,"toggleAll",void 0),y([t.ViewChild("searchSelectInput",{read:t.ElementRef,static:!0})],e.prototype,"searchSelectInput",void 0),y([t.ViewChild("innerSelectSearch",{read:t.ElementRef,static:!0})],e.prototype,"innerSelectSearch",void 0),y([t.ContentChild(v,{static:!1})],e.prototype,"clearIcon",void 0),y([t.HostBinding("class.mat-select-search-inside-mat-option")],e.prototype,"isInsideMatOption",null),e=h=y([t.Component({selector:"ngx-mat-select-search",template:'\x3c!-- Placeholder to adjust vertical offset of the mat-option elements --\x3e\n<input matInput class="mat-select-search-input mat-select-search-hidden"/>\n\n\x3c!-- Note: the  mat-datepicker-content mat-tab-header are needed to inherit the material theme colors, see PR #22 --\x3e\n<div\n      #innerSelectSearch\n      class="mat-select-search-inner mat-typography mat-datepicker-content mat-tab-header"\n      [ngClass]="{\'mat-select-search-inner-multiple\': matSelect.multiple, \'mat-select-search-inner-toggle-all\': _isToggleAllCheckboxVisible() }">\n\n  <mat-checkbox *ngIf="_isToggleAllCheckboxVisible()"\n                [color]="matFormField?.color"\n                class="mat-select-search-toggle-all-checkbox"\n                [checked]="toggleAllCheckboxChecked"\n                [indeterminate]="toggleAllCheckboxIndeterminate"\n                [matTooltip]="toggleAllCheckboxTooltipMessage"\n                matTooltipClass="ngx-mat-select-search-toggle-all-tooltip"\n                [matTooltipPosition]="toogleAllCheckboxTooltipPosition"\n                (change)="_emitSelectAllBooleanToParent($event.checked)"\n  ></mat-checkbox>\n\n  <input class="mat-select-search-input mat-input-element"\n         autocomplete="off"\n         [type]="type"\n         [formControl]="_formControl"\n         #searchSelectInput\n         (keydown)="_handleKeydown($event)"\n         (keyup)="_handleKeyup($event)"\n         (blur)="onBlur()"\n         [placeholder]="placeholderLabel"\n         [attr.aria-label]="ariaLabel"\n  />\n  <mat-spinner *ngIf="searching"\n          class="mat-select-search-spinner"\n          diameter="16"></mat-spinner>\n\n  <button mat-button\n          *ngIf="!hideClearSearchButton && value && !searching"\n          mat-icon-button\n          aria-label="Clear"\n          (click)="_reset(true)"\n          class="mat-select-search-clear">\n    <ng-content *ngIf="clearIcon; else defaultIcon" select="[ngxMatSelectSearchClear]"></ng-content>\n    <ng-template #defaultIcon>\n      <mat-icon>close</mat-icon>\n    </ng-template>\n  </button>\n\n  <ng-content select=".mat-select-search-custom-header-content"></ng-content>\n\n</div>\n\n<div *ngIf="_showNoEntriesFound$ | async"\n     class="mat-select-search-no-entries-found">\n  {{noEntriesFoundLabel}}\n</div>\n\x3c!--\nCopyright (c) 2018 Bithost GmbH All Rights Reserved.\n\nUse of this source code is governed by an MIT-style license that can be\nfound in the LICENSE file at https://angular.io/license\n--\x3e\n',providers:[{provide:n.NG_VALUE_ACCESSOR,useExisting:t.forwardRef((function(){return h})),multi:!0}],changeDetection:t.ChangeDetectionStrategy.OnPush,styles:[".mat-select-search-hidden{visibility:hidden}.mat-select-search-inner{position:absolute;top:0;width:100%;border-bottom-width:1px;border-bottom-style:solid;z-index:100;font-size:inherit;box-shadow:none;border-radius:4px 4px 0 0;-webkit-transform:translate3d(0,0,0)}.mat-select-search-inner.mat-select-search-inner-multiple{width:100%}.mat-select-search-inner.mat-select-search-inner-multiple.mat-select-search-inner-toggle-all{display:flex;align-items:center}.mat-select-search-inner .mat-input-element{flex-basis:auto}.mat-select-search-inner .mat-input-element:-ms-input-placeholder{-ms-user-select:text}::ng-deep .mat-select-search-panel{transform:none!important;overflow-x:hidden}.mat-select-search-input{padding:16px 44px 16px 16px;box-sizing:border-box;width:100%}:host-context([dir=rtl]) .mat-select-search-input{padding-right:16px;padding-left:44px}.mat-select-search-no-entries-found{padding:16px}.mat-select-search-clear{position:absolute;right:4px;top:5px}:host-context([dir=rtl]) .mat-select-search-clear{right:auto;left:4px}.mat-select-search-spinner{position:absolute;right:16px;top:calc(50% - 8px)}:host-context([dir=rtl]) .mat-select-search-spinner{right:auto;left:16px}:host.mat-select-search-inside-mat-option .mat-select-search-input{padding-top:0;padding-bottom:0;height:3em;line-height:3em}:host.mat-select-search-inside-mat-option .mat-select-search-clear{top:3px}::ng-deep .mat-option[aria-disabled=true].contains-mat-select-search{position:static;padding:0}::ng-deep .mat-option[aria-disabled=true].contains-mat-select-search .mat-icon{margin-right:0;margin-left:0}::ng-deep .mat-option[aria-disabled=true].contains-mat-select-search .mat-option-pseudo-checkbox{display:none}::ng-deep .mat-option[aria-disabled=true].contains-mat-select-search.mat-select-search-no-entries-found{height:6em}.mat-select-search-toggle-all-checkbox{padding-left:16px;padding-bottom:2px}:host-context([dir=rtl]) .mat-select-search-toggle-all-checkbox{padding-left:0;padding-right:16px}"]}),b(0,t.Inject(i.MatSelect)),b(3,t.Optional()),b(3,t.Inject(o.MatOption)),b(5,t.Optional()),b(5,t.Inject(a.MatFormField))],e)}(),C=function(){function e(){}return e=y([t.NgModule({imports:[f.CommonModule,n.ReactiveFormsModule,h.MatButtonModule,u.MatCheckboxModule,d.MatIconModule,m.MatProgressSpinnerModule,g.MatTooltipModule],declarations:[x,v],exports:[x,v]})],e)}();e.MatSelectSearchComponent=x,e.MatSelectSearchVersion="3.3.0",e.NgxMatSelectSearchModule=C,e.ɵa=v,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=ngx-mat-select-search.umd.min.js.map